@model WebTicTacToe.Models.GameContext
@{
    ViewData["Title"] = "Home Page";
}

<div class="abs full text-center display-flex justify-content-center align-items-center">
    <h1 class="d-none">TicTacToe Game</h1>
    
    @if (!Model.Empty)
    {
        var game = Model.GetGame();
        if (game != null)
        {
            <div class="board-container">
                @if (game.IsPlaying())
                {
                    @await Html.PartialAsync("_Board", game)
                }
                else
                {
                    @await Html.PartialAsync("_Board", game)
                    @await Html.PartialAsync("_EndGame", game)
                }

                <div class="game-actions">
                    <form asp-controller="Game" asp-action="Clear"><button class="button red small-shadow" type="submit">Clear</button></form>
                    <form asp-controller="Game" asp-action="Restart"><button class="button blue small-shadow" type="submit">Restart</button></form>
                    <a asp-controller="Game" asp-action="Index" class="button blue small-shadow">New Game</a>
                </div>
            </div>
        }
    }
    else
    {
        <div class="main-page-ctn abs full">
            <a class="button big-btn blue huge-shadow" asp-controller="Game" asp-action="Index">Play TicTacToe</a>
        </div>
    }
</div>